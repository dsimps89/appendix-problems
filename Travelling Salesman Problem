!pip install dwave-ocean-sdk
import networkx as nx
from dwave.system.samplers import DWaveSampler
from dwave.system.composites import EmbeddingComposite

# Define the graph for the problem
graph = nx.complete_graph(4)

# Define the objective function to minimize the sum of the distances between nodes
def objective_function(sample):
    s = [i for i in range(len(graph.nodes)) if sample[i]]
    return sum(graph.edges[s[i], s[i+1]]["weight"] for i in range(len(s)-1))

# Set up the QPU/sampler and solve
sampler = EmbeddingComposite(DWaveSampler())
response = sampler.sample_qubo(objective_function, num_reads=1000)

# Extract the best solution
best_sample = next(iter(response))
best_tour = [i for i in range(len(graph.nodes)) if best_sample[i]]
best_distance = objective_function(best_sample)

print("Best tour: ", best_tour)
print("Best distance: ", best_distance)
